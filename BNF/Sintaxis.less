
Capturar imagenes
Tiene 6 ruedas independientes
	movimiento
		hacia atras
		adelante
		detenerse
Dos brazos independientes
	giran las ruedas
		70° a cada lado
Camara
	altura maxima 100cm
	gira 360°
	inclina 45°
		arriba
		abajo
	//los valores son racionales
Enviar
	imagenes
	ubicacion
Desplazarse


Debera identificar todos los comandos comunes de la programacion
	Mientras 		Mientras Condicion Haga
	Si 				Condicion Entonces
Debera tambien identificar lo siguiente
	Desplazar n metros     Mientras Desplazar sea menor o igual que NUMERO Entonces AVANZAR
	Realizar giros		   Girar Ruedas n grados
	Girar camara 		   Gire la camara 45°
	Capturar imagenes	   Capturar
	Etc

<programa>  <LineasCodigo>
            <LineasCodigo>::=  <instrucciones> | <metodosMovimiento> | <ListaInstrucciones>
                               <instrucciones>::= <variables> | <condicionales> | <iteracion> |<VariablesAsignacion>
                      
//creacion de variables
          <variables>::= 'var'  <tipoDato> : <cadena>          
          <tipoDato> ::=  'int' <datoEntero> | 'float' <datoFlotante> | 'String' <datoCadena> | 'bool' <datoBooleano>
          <datoEntero> ::=  <signo><digito>|<Entero><digito>
          <signo>::="+"|"-"|"£"       // £ para indicar el vacio 
          <digito> ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9            
          <datoFlotante>::= <Entero>.<Entero>          
          <datoCadena>::= <Letra>|<cadena><Letra>|<cadena><Digito>
          <Letra> ::= <letra_mayuscula> | <letra_minuscula> | <caracter_especial>  
          <letraMayuscula> ::= A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z  
          <letraMinuscula> ::= a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z 
          <datoBooleano> ::= TRUE | FALSE 

//asignacion de variables 
          <VariablesAsignacion>::  <variables> <operador_asignacion> <datoEntero> 
                                  | <variables> <operador_asignacion> <datoFlotante>
                                  | <variables> <operador_asignacion> <datoCadena> 
                                  | <variables> <operador_asignacion> <datoBooleano>

//iteracion, para trabajar los ciclos       
        <iteracion>::=  <cicloIteracion> | <iteracion>
        <cicloIteracion>::= <ciclo_while> | <ciclo_for> | <clico_doWhile> | <cicloIteracion>
        <ciclo_while> ::= 'while' (<condicion>) do <instrucciones> 'endWhile'
        <ciclo_for> ::= 'for' (<VariablesAsignacion>;<condicion>;<operador_incremental>) { <instrucciones> }  'endFor'
        <ciclo_doWhile> ::= 'do' { <instrucciones> } 'while' (<condicion>) 'endDo'

// para la toma de deciciones         
        <condicionales>::= <CondicionalSimple>| <Condicionaldoble> 
        <CondicionalSimple>::= "si" (<condicion>) "entonces" <instrucciones> "fin"
        <Condicionaldoble>::= "si" (<condicion>) "entonces" <instrucciones> " entonces sino" <instrucciones>  "fin"


        <condicion> ::= (<variables> <operador> <variables> | <variables> <operador_logico> <variables>  |<condición>)
        <operador> ::= <operador_aritmetico> | <operador_logico> | <operador_relacional> | <operador_asignacion> 
        | <operador_igualdad> | <operador_incrementable> |<operador_concatenacion> | <operador>
        
          <operador_aritmetico> ::=  + | - | * | / | %
          <operador_logico> ::= && | || | NO
          <operador_relacional> ::= > | < | >= | <=
          <operador_asignacion> ::=  =
          <operador_igualdad> ::= == | !=
          <operador_incremental> ::= ++ | --
          <operador_concatenacion> ::= &

        <metodosMovimiento>::=  <giros>| <Imagenes> | <Fotos>|<desplazarse>| |<metodosMovimiento>

        //giros
        <giros>::= <girarRuedas> | <girarCamara> |<giros>
	    //Desplazarse
        <Desplazarse>::= <avanzar> | <retroceder> | <detener> 
        <actualRuedas>::= <datoEntero> | <datoFlotante>
        <girarRuedas>::= 'girarRuedas' <datoEntero> 'finGirarRuedas' | 'avanzar' <datoFlotante> 'finGirarRuedas'
        <avanzar>::= 'avanzar' <datoEntero> 'finAvanzar' | 'avanzar' <datoFlotante> 'finAvanzar'
        <retroceder>::= 'retroceder' <datoEntero> 'finRetroceder'| 'retroceder' <datoFlotante> 'finRetroceder'
        <detener>::= 'detener'
	    //Camara
        <alturaActual>::= <datoEntero> | <datoFlotante>
        <cambiarAltura>::= 'cambiarAltura' <datoEntero> 'finCambiarAltura' | 'cambiarAltura' <datoFlotante> 'finCambiarAltura'
        <inclinacionActualCamara>::= <datoEntero> | <datoFlotante>
        <inclinarCamara>::= 'inclinarCamara' <datoEntero> 'finInclinarCamara'| 'inclinarCamara' <datoFlotante> 'finInclinarCamara'
        <posicionActualCamara>::= <datoEntero> | <datoFlotante>
        <girarCamara>::= 'girarCamara' <datoEntero> 'finGirarCamara'| 'girarCamara' <datoFlotante> 'finGirarCamara'
        //Fotos
        <Fotos>::= <tomarFoto> | <enviarFoto>
        <tomarFoto>::= 'tomarFoto'
        <enviarFoto>::= 'enviarFoto'
        
        <palabrasClave>::= girarRuedas | cambiarAltura | girarCamara | inclinarCamara | avanzar | retroceder | detener | tomarFoto | enviarFoto | while | for | do | si | entonces | sino | var | int | float | String | bool